#!/usr/bin/perl

use strict;
use warnings;

use CGI;

use adapter::IO;
use components::Form;
use view::placeholder;
use repository::PostRepository;
use types::WithID;

use Data::Dumper;

###########################################################3

sub post_list_element {
  my $id = WithID::get_id($_);
  my %post = WithID::unwrap($_);

  return <<EOF
  <a href="/cgi-bin/assignment10/pages/post?id=$id">
    <li class="post_list_element">
      <h3 class="post_list_element__title">${\( Post::title(\%post) )}</h3>
      <span class="post_list_element__author">
        Posted by ${\( Post::author(\%post) )}
      </span>
    </li>
  </a>
EOF
}

&placeholder::apply("index", sub {

  my @list = reverse(PostRepository::latest(5));

  return <<EOF
<!-- -->
  <div class="page_content">
    <section class="new_post_section">
      <h2 class="new_post_section__title">ðŸ™Œ New post</h2>
      ${\( Form::render(
        "create-new-post",
        ({author => "Author"}, {title => "Title"}, {content => "Content"})
      ))}
    </section>

    <section class="new_post_section">
      <h2 class="new_post_section__title">ðŸ—³ Recent posts</h2>
      <ol class="recent_post_section__list">
        ${\(
          join("\n", map(post_list_element, @list))
        )}
      </ol>
    </section>
  </div>
<!--
EOF
;})

# vim: set ft=html: -->
